Last login: Wed Mar 11 16:33:02 on ttys000
rowan@nomad ~ % cd /Users/rowan/Projects/coding_dojo_lessons/Coding_Dojo_Week_3/python_stack/django/django_orm
rowan@nomad django_orm % cd book_authors_proj
rowan@nomad book_authors_proj % code .
rowan@nomad book_authors_proj % python manage.py makemigrations
Traceback (most recent call last):
  File "manage.py", line 10, in main
    from django.core.management import execute_from_command_line
ModuleNotFoundError: No module named 'django'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "manage.py", line 21, in <module>
    main()
  File "manage.py", line 12, in main
    raise ImportError(
ImportError: Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment variable? Did you forget to activate a virtual environment?
rowan@nomad book_authors_proj % cd ..
rowan@nomad django_orm % cd ..
rowan@nomad django % cd ..
rowan@nomad python_stack % cd my_environments
rowan@nomad my_environments % source djangoenv/bin/activate
(djangoenv) rowan@nomad my_environments % cd ..
(djangoenv) rowan@nomad python_stack % cd django/django_orm/book_authors_proj
(djangoenv) rowan@nomad book_authors_proj % python manage.py makemigrations
Migrations for 'book_authors_app':
  book_authors_app/migrations/0004_auto_20200311_2038.py
    - Remove field author from book
    - Add field author to book
(djangoenv) rowan@nomad book_authors_proj % python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, book_authors_app, contenttypes, sessions
Running migrations:
  Applying book_authors_app.0004_auto_20200311_2038... OK
(djangoenv) rowan@nomad book_authors_proj % python manage.py shell
Python 3.8.2 (v3.8.2:7b3ab5921f, Feb 24 2020, 17:52:18)
[Clang 6.0 (clang-600.0.57)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> Book.objects.get(id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'Book' is not defined
>>> from book_authors_app.models import *
>>> b1 = Book.objects.get(id=1)
>>> a1 = Author.objects.get(id=1)
>>> b1.add(a1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Book' object has no attribute 'add'
>>> b1.author.add(a1)
>>> b2=Book.objects.get(id=2)
>>> b2.author.add(a1)
>>> a2=Author.objects.get(id=2)
>>> b3=Book.objects.get(id=3)
>>> b4=Book.objects.get(id=4)
>>> b1.author.add(a2)
>>> b2.author.add(a2)
>>> b3.author.add(a2)
>>> a3=Author.objects.get(id=3)
>>> b1.author.add(a3)
>>> b2.author.add(a3)
>>> b3.author.add(a3)
>>> b4.author.add(a3)
>>> a4=Author.objects.get(id=4)
>>> b5=Book.objects.get(id=5)
>>> b1.author.add(a4)
>>> b2.author.add(a4)
>>> b3.author.add(a4)
>>> b4.author.add(a4)
>>> b5.author.add(a4)
>>> b3.author
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x10b3bf460>
>>> b3.author.get()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/rowan/Projects/coding_dojo_lessons/Coding_Dojo_Week_3/python_stack/my_environments/djangoenv/lib/python3.8/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/rowan/Projects/coding_dojo_lessons/Coding_Dojo_Week_3/python_stack/my_environments/djangoenv/lib/python3.8/site-packages/django/db/models/query.py", line 410, in get
    raise self.model.MultipleObjectsReturned(
book_authors_app.models.Author.MultipleObjectsReturned: get() returned more than one Author -- it returned 3!
>>> b3.author_set.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Book' object has no attribute 'author_set'
>>> b3.author.get
<bound method BaseManager._get_queryset_methods.<locals>.create_method.<locals>.manager_method of <django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x10b400e80>>
>>> b3.author.get()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/Users/rowan/Projects/coding_dojo_lessons/Coding_Dojo_Week_3/python_stack/my_environments/djangoenv/lib/python3.8/site-packages/django/db/models/manager.py", line 82, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "/Users/rowan/Projects/coding_dojo_lessons/Coding_Dojo_Week_3/python_stack/my_environments/djangoenv/lib/python3.8/site-packages/django/db/models/query.py", line 410, in get
    raise self.model.MultipleObjectsReturned(
book_authors_app.models.Author.MultipleObjectsReturned: get() returned more than one Author -- it returned 3!
>>> b3.author.get(first_name)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'first_name' is not defined
>>> b3.author.first_name.get
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'ManyRelatedManager' object has no attribute 'first_name'
>>> b3.author.first_name.get()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'ManyRelatedManager' object has no attribute 'first_name'
>>> b3.author.all()
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>
>>> b3.author.remove(a1)
>>> b2.author.add.(a5)
  File "<console>", line 1
    b2.author.add.(a5)
                  ^
SyntaxError: invalid syntax
>>> b2.author.add(a5)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'a5' is not defined
>>> a5=Author.objects.get(id=5)
>>> b2.author.add(a5)
>>> a5.author.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Author' object has no attribute 'author'
>>> a3.books.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>
>>> b5.authors.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Book' object has no attribute 'authors'
>>> b5.author.all()
<QuerySet [<Author: Author object (4)>]>
>>>
>>>
>>>